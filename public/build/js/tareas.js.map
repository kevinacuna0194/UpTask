{"version":3,"sources":["tareas.js"],"names":["mostrarAlerta","mensaje","tipo","referencia","alertaPrevia","document","querySelector","remove","alerta","createElement","classList","add","textContent","parentElement","insertBefore","nextElementSibling","setTimeout","addEventListener","modal","innerHTML","e","preventDefault","target","contains","tarea","value","trim","async","datos","FormData","append","proyectoParams","URLSearchParams","window","location","search","Object","fromEntries","entries","url","obtenerProyecto","respuesta","fetch","method","body","resultado","json","console","log","error","agregarTarea","submitFormularioNuevaTarea","appendChild"],"mappings":"CAMA,WAyEI,SAASA,EAAcC,EAASC,EAAMC,GAGlC,MAAMC,EAAeC,SAASC,cAAc,WACxCF,GACAA,EAAaG,SAGjB,MAAMC,EAASH,SAASI,cAAc,OACtCD,EAAOE,UAAUC,IAAI,SAAUT,GAC/BM,EAAOI,YAAcX,EAOrBE,EAAWU,cAAcC,aAAaN,EAAQL,EAAWY,oBAGzDC,WAAW,KACPR,EAAOD,UACR,KA7FeF,SAASC,cAAc,kBAC/BW,iBAAiB,SAE/B,WACI,MAAMC,EAAQb,SAASI,cAAc,OACrCS,EAAMR,UAAUC,IAAI,SAEpBO,EAAMC,UAAY,4tBAmBlBH,WAAW,KACYX,SAASC,cAAc,eAC/BI,UAAUC,IAAI,WAC1B,GAEHO,EAAMD,iBAAiB,SAAS,SAAUG,GAKtC,GAHAA,EAAEC,iBAGED,EAAEE,OAAOZ,UAAUa,SAAS,gBAAiB,CAE1BlB,SAASC,cAAc,eAC/BI,UAAUC,IAAI,UAGzBK,WAAW,KACPE,EAAMX,UACP,KAGHa,EAAEE,OAAOZ,UAAUa,SAAS,uBASxC,WAEI,MAAMC,EAAQnB,SAASC,cAAc,UAAUmB,MAAMC,OAErD,GAAc,KAAVF,EAIA,YAFAxB,EAAc,uCAAwC,QAASK,SAASC,cAAc,wBAmC9FqB,eAA4BH,GAExB,MAAMI,EAAQ,IAAIC,SAClBD,EAAME,OAAO,SAAUN,GACvBI,EAAME,OAAO,aA0BjB,WACI,MAAMC,EAAiB,IAAIC,gBAAgBC,OAAOC,SAASC,QAI3D,OAHiBC,OAAOC,YAAYN,EAAeO,WAGnCC,IA/BWC,IAE3B,IACI,MAAMD,EAAM,kCACNE,QAAkBC,MAAMH,EAAK,CAC/BI,OAAQ,OACRC,KAAMhB,IAGJiB,QAAkBJ,EAAUK,OAKlC,GAJAC,QAAQC,IAAIH,GAEZ7C,EAAc6C,EAAU5C,QAAS4C,EAAU3C,KAAMG,SAASC,cAAc,uBAEjD,UAAnBuC,EAAU3C,KAAkB,CAC5B,MAAMgB,EAAQb,SAASC,cAAc,UACrCU,WAAW,KACPE,EAAMX,UACP,MAGT,MAAO0C,GACLF,QAAQC,IAAIC,IAxDhBC,CAAa1B,GAnBL2B,MAIR9C,SAASC,cAAc,cAAc8C,YAAYlC,MAtDzD","file":"tareas.js","sourcesContent":["/** IIFE (Immediately Invoked Function Expression): Expresión de función ejecutada inmediatamente. También conocido cómo función autoejecutable.\r\n * Esto impide accesar variables fuera del IIFE, así cómo contaminar el alcance (scope) global.\r\n * (function () {\r\n    statements\r\n    })();\r\n*/\r\n(function () {\r\n    /** Botón para mostrar el Modal de agregar tarea */\r\n    const nuevaTareaBtn = document.querySelector('#agregar-tarea');\r\n    nuevaTareaBtn.addEventListener('click', mostrarFormulario);\r\n\r\n    function mostrarFormulario() {\r\n        const modal = document.createElement('DIV');\r\n        modal.classList.add('modal');\r\n\r\n        modal.innerHTML = `\r\n            <form class=\"formulario nueva-tarea\">\r\n                <legend>Añade una nueva tarea</legend>\r\n                <div class=\"campo\">\r\n                    <label for=\"tarea\">Tarea</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"tarea\"\r\n                        id=\"tarea\"\r\n                        placeholder=\"Añadir Tarea al Proyecto Actual\"\r\n                    />\r\n                </div>\r\n                <div class=\"opciones\">\r\n                    <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"Añadir Tarea\"/>\r\n                    <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n                </div>\r\n            </form>\r\n            `;\r\n\r\n        setTimeout(() => {\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('animar');\r\n        }, 0);\r\n\r\n        modal.addEventListener('click', function (e) {\r\n            /** Para que la acción por defecto no cierre la ventana modal */\r\n            e.preventDefault();\r\n\r\n            /** Delegetion, el html se crea con JS (innerHTML) */\r\n            if (e.target.classList.contains('cerrar-modal')) {\r\n\r\n                const formulario = document.querySelector('.formulario');\r\n                formulario.classList.add('cerrar');\r\n\r\n                /** Modelo de concurrencia JS */\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 500);\r\n            }\r\n\r\n            if (e.target.classList.contains('submit-nueva-tarea')) {\r\n                submitFormularioNuevaTarea();\r\n            }\r\n        })\r\n\r\n        document.querySelector('.dashboard').appendChild(modal);\r\n    }\r\n\r\n    /** Ya va a exitir el formulario */\r\n    function submitFormularioNuevaTarea() {\r\n\r\n        const tarea = document.querySelector('#tarea').value.trim(); // Obtener lo que escribió el usuario. trim() elimina espacios al principio y al final.\r\n\r\n        if (tarea === '') {\r\n            /** Mostrar alerta de error */\r\n            mostrarAlerta('El Nombre de la tarea es obligatorio', 'error', document.querySelector('.formulario legend'));\r\n\r\n            return;\r\n        }\r\n\r\n        agregarTarea(tarea);\r\n    }\r\n\r\n    /** Muestra un mensaje en el Modal */\r\n    function mostrarAlerta(mensaje, tipo, referencia) {\r\n\r\n        /** Prevenir la creación de múltiples alertas */\r\n        const alertaPrevia = document.querySelector('.alerta');\r\n        if (alertaPrevia) {\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('DIV');\r\n        alerta.classList.add('alerta', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        // console.log(referencia);\r\n        // console.log(referencia.parentElement);\r\n        // console.log(referencia.nextElementSibling);\r\n\r\n        /** Insertar alerta antes del siguiente elemento hermano */\r\n        referencia.parentElement.insertBefore(alerta, referencia.nextElementSibling);\r\n\r\n        /** Eliminar Alerta */\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 5000);\r\n    }\r\n\r\n    /** Consultar al servidor para ageragr una nueva tarea al proyecto actual */\r\n    async function agregarTarea(tarea) {\r\n\r\n        const datos = new FormData();\r\n        datos.append('nombre', tarea);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n            console.log(resultado);\r\n\r\n            mostrarAlerta(resultado.mensaje, resultado.tipo, document.querySelector('.formulario legend'));\r\n\r\n            if (resultado.tipo === 'exito') {\r\n                const modal = document.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 3000);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function obtenerProyecto() {\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams.entries());\r\n        /** console.log(proyecto); Lee la URL {url: '90f2360f2f93d8c2946118a5e425c495'} */\r\n\r\n        return proyecto.url;\r\n    }\r\n})();\r\n"]}